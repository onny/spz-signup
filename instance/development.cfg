# -*- coding: utf-8 -*-

import os
from datetime import timedelta

SECRET_KEY = 'your-secret-key'
TOKEN_SECRET_KEY = 'your-secret-key'
ARGON2_SALT = 'your-secret-key'
DEBUG = True

SQLALCHEMY_DATABASE_URI = 'sqlite:///{0}'.format(os.path.join(os.path.abspath('.'), 'local.db'))

MAIL_SERVER = 'localhost'
MAIL_PORT = 4000
MAIL_USE_TLS = False
MAIL_USE_SSL = False
MAIL_DEBUG = False
MAIL_USERNAME = None
MAIL_PASSWORD = None
MAIL_DEFAULT_SENDER = "spz-signup"
MAIL_MAX_EMAILS = None
MAIL_SUPPRESS_SEND = False

CACHE_CONFIG = {'CACHE_TYPE': 'simple', 'CACHE_DEFAULT_TIMEOUT': 60}

ACCESS_CONTROL = {
    'unrestricted': [
        'daniel@trvx.org',
        'roman@zukowsky.de',
        'marco@crepererum.net'
    ],
    'restricted': [

    ],
}

PRIMARY_MAIL = 'info@spz.kit.edu'

REPLY_TO = [
    PRIMARY_MAIL,
    'englisch@spz.kit.edu',
    'franzoesisch@spz.kit.edu',
    'spanisch@spz.kit.edu',
]

OVERBOOKING_FACTOR = 3

# random selection: hours the random selection window is open for signup
RANDOM_WINDOW_OPEN_FOR = timedelta(hours=11)
# after which the signup is closed for a time window; not a technical limitation, management wanted it like this
RANDOM_WINDOW_CLOSED_FOR = timedelta(hours=20)

# limit for global amount of attendances; this does not affect attendances for courses that are already done "now"; e.g. intensive
MAX_ATTENDANCES = 2
