# -*- coding: utf-8 -*-

from datetime import timedelta

SECRET_KEY = 'your-secret-key'
TOKEN_SECRET_KEY = 'your-secret-key'
ARGON2_SALT = 'your-secret-key'
DEBUG = False

LOGFILE = '/var/log/spz/error.log'

# multiple instances -- disabled for now
WTF_CSRF_ENABLED = False

SESSION_COOKIE_SECURE = True
PREFERRED_URL_SCHEME = 'https'

SQLALCHEMY_DATABASE_URI = 'postgresql://USER:PASSWORD@localhost/DB'
SQLALCHEMY_POOL_SIZE = 5
SQLALCHEMY_TRACK_MODIFICATIONS = False

CELERY_BROKER_URL = 'redis://redis:6379'
CELERY_RESULT_BACKEND = 'redis://redis:6379'
CELERY_ACCEPT_CONTENT = ['pickle']
CELERY_TASK_SERIALIZER = 'pickle'
CELERY_RESULT_SERIALIZER = 'pickle'

# per connection
MAIL_MAX_EMAILS = 10

CACHE_CONFIG = {'CACHE_TYPE': 'simple', 'CACHE_DEFAULT_TIMEOUT': 30}

PRIMARY_MAIL = 'info@spz.kit.edu'

SEMESTER_NAME = 'Sommersemester 2016'

REPLY_TO = [
    PRIMARY_MAIL,
    'englisch@spz.kit.edu',
    'franzoesisch@spz.kit.edu',
    'spanisch@spz.kit.edu',
]

OVERBOOKING_FACTOR = 3

# random selection: hours the random selection window is open for signup
RANDOM_WINDOW_OPEN_FOR = timedelta(hours=11)
# after which the signup is closed for a time window; not a technical limitation, management wanted it like this
RANDOM_WINDOW_CLOSED_FOR = timedelta(hours=20)

# limit for global amount of attendances; this does not affect attendances for courses that are already done "now"; e.g. intensive
MAX_ATTENDANCES = 2
