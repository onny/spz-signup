# -*- coding: utf-8 -*-

from datetime import timedelta

from kombu import Queue

SECRET_KEY = 'your-secret-key'
TOKEN_SECRET_KEY = 'your-secret-key'
ARGON2_SALT = 'your-secret-key'
DEBUG = True

# multiple instances -- disabled for now
WTF_CSRF_ENABLED = False

SESSION_COOKIE_SECURE = True
PREFERRED_URL_SCHEME = 'https'

SQLALCHEMY_DATABASE_URI = 'postgresql://postgres:mysecretpassword@postgres/spz'
SQLALCHEMY_POOL_SIZE = 5
SQLALCHEMY_TRACK_MODIFICATIONS = False

CELERY_BROKER_URL = 'redis://redis:6379'
CELERY_RESULT_BACKEND = 'redis://redis:6379'
CELERY_ACCEPT_CONTENT = ['pickle']
CELERY_TASK_SERIALIZER = 'pickle'
CELERY_RESULT_SERIALIZER = 'pickle'
CELERY_DEFAULT_QUEUE = 'default'
CELERY_QUEUES = (
    Queue('default', routing_key='default'),
    Queue('slow_mails', routing_key='slow_mails')
)
CELERY_ROUTES = {
    'spz.async.async_send_slow': {
        'queue': 'slow_mails',
        'routing_key': 'slow_mails'
    },
    'spz.async.async_send_quick': {
        'queue': 'default',
        'routing_key': 'default'
    },
    'spz.async.periodic_populate': {
        'queue': 'default',
        'routing_key': 'default'
    }
}
CELERY_TIMEZONE = 'UTC'  # like everything else
CELERYBEAT_SCHEDULE = {
    'populate': {
        'task': 'spz.async.periodic_populate',
        'schedule': timedelta(minutes=5)
    }
}

MAIL_SERVER = 'mail'
MAIL_PORT = 25
MAIL_USE_TLS = False
MAIL_USE_SSL = False
MAIL_DEBUG = False
MAIL_USERNAME = None
MAIL_PASSWORD = None
MAIL_DEFAULT_SENDER = "spz-signup"
MAIL_MAX_EMAILS = 10
MAIL_SUPPRESS_SEND = False

CACHE_CONFIG = {'CACHE_TYPE': 'simple', 'CACHE_DEFAULT_TIMEOUT': 30}

PRIMARY_MAIL = 'info@spz.kit.edu'

SEMESTER_NAME = 'Testsemester 2020'

REPLY_TO = [
    PRIMARY_MAIL,
    'englisch@spz.kit.edu',
    'franzoesisch@spz.kit.edu',
    'spanisch@spz.kit.edu',
]

# random selection: hours the random selection window is open for signup
RANDOM_WINDOW_OPEN_FOR = timedelta(hours=11)
# after which the signup is closed for a time window and is there to do some manual check-ups and adjustsments
MANUAL_PERIOD = timedelta(hours=15)
# afterwards, the automatic restock system kicks in;
# some time later, the RND process is finished and we continue with FCFS (in case there are empty slots)
RANDOM_WINDOW_CLOSED_FOR = timedelta(hours=20)

# limit for global amount of attendances; this does not affect attendances for courses that are already done "now"; e.g. intensive
MAX_ATTENDANCES = 2
